// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address, a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);
        Register(in=in, load=loadA, out=lastA);
        Register(in=in, load=loadB, out=lastB);
        Register(in=in, load=loadC, out=lastC);
        Register(in=in, load=loadD, out=lastD);
        Register(in=in, load=loadE, out=lastE);
        Register(in=in, load=loadF, out=lastF);
        Register(in=in, load=loadG, out=lastG);
        Register(in=in, load=loadH, out=lastH);
        Mux8Way16(a=lastA, b=lastB, c=lastC, d=lastD, e=lastE, f=lastF, g=lastG, h=lastH, sel=address, out=out);
}